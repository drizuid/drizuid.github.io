<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>informix on longoconsulting.us</title>
    <link>https://drizuid.github.io/categories/informix/</link>
    <description>Recent content in informix on longoconsulting.us</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Oct 2017 20:24:00 +0000</lastBuildDate>
    <atom:link href="https://drizuid.github.io/categories/informix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bulk changing incorrect css for unassigned DNs</title>
      <link>https://drizuid.github.io/2017/10/bulk-changing-incorrect-css-for-unassigned-dns/</link>
      <pubDate>Tue, 24 Oct 2017 20:24:00 +0000</pubDate>
      <guid>https://drizuid.github.io/2017/10/bulk-changing-incorrect-css-for-unassigned-dns/</guid>
      <description>&lt;p&gt;Today I was cleaning up some CSSs for a client. I came across a particular css that had been erroneously assigned as the line css for a bunch of unassigned DNs (they were precreated to show they were already in use). Of course, I went to BAT first to see if I could just update the line css of the lines, but I discovered that I couldn&amp;rsquo;t affect the unassigned DNs (even though there is an option for searching unassigned dns…)&lt;/p&gt;&#xA;&lt;p&gt;Anyway, as you can guess, I jumped into SQL to see what I could do.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using SQL to clean up Call Manager pt3</title>
      <link>https://drizuid.github.io/2017/05/using-sql-to-clean-up-call-manager-pt3/</link>
      <pubDate>Thu, 18 May 2017 20:23:00 +0000</pubDate>
      <guid>https://drizuid.github.io/2017/05/using-sql-to-clean-up-call-manager-pt3/</guid>
      <description>See Parts 1 and 2&#xA;If you&amp;rsquo;ve been following me in this 3 part series, you know we started off with around 700 dependencies on a CSS that no longer fits our standard. It was in use by various things and we leveraged SQL to quickly, efficiently, and safely remove it from use. When we finished part 2, the only things still referencing our css were directory numbers. Well, we actually have 2 CSSs we&amp;rsquo;re going to clean up today.</description>
    </item>
    <item>
      <title>Using SQL to clean up Call Manager pt2</title>
      <link>https://drizuid.github.io/2017/05/using-sql-to-clean-up-call-manager-pt2/</link>
      <pubDate>Tue, 02 May 2017 20:22:00 +0000</pubDate>
      <guid>https://drizuid.github.io/2017/05/using-sql-to-clean-up-call-manager-pt2/</guid>
      <description>&lt;p&gt;See Parts &lt;a href=&#34;https://drizuid.github.io/2017/04/using-sql-to-clean-up-call-manager-pt1/&#34;&gt;1&lt;/a&gt; and &lt;a href=&#34;https://drizuid.github.io/2017/05/using-sql-to-clean-up-call-manager-pt3/&#34;&gt;3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Previously we had around 700 dependencies on a CSS that no longer fits our standard. This CSS was in use by lines, devices, and users throughout the system. In part 1 we removed this css from the users, now we need to do the same for the devices.&lt;/p&gt;&#xA;&lt;p&gt;As before, we&amp;rsquo;ll start with a count.&lt;br&gt;&#xA;&lt;img src=&#34;https://drizuid.github.io/posts/using-sql-to-clean-up-call-manager-pt2/count.PNG&#34; alt=&#34;count&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using SQL to clean up Call Manager pt1</title>
      <link>https://drizuid.github.io/2017/04/using-sql-to-clean-up-call-manager-pt1/</link>
      <pubDate>Sat, 29 Apr 2017 20:20:00 +0000</pubDate>
      <guid>https://drizuid.github.io/2017/04/using-sql-to-clean-up-call-manager-pt1/</guid>
      <description>&lt;p&gt;See Parts &lt;a href=&#34;https://drizuid.github.io/2017/05/using-sql-to-clean-up-call-manager-pt2/&#34;&gt;2&lt;/a&gt; and &lt;a href=&#34;https://drizuid.github.io/2017/05/using-sql-to-clean-up-call-manager-pt3/&#34;&gt;3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;So, at a client of mine that we will call PRO, we had a Device-CSS which seemed to be the default css for pretty much everything, including presence subscription, even though PRO-Subscribe-CSS exists. Well the PRO-Device-css also used a lot of legacy stuff from the PRI days. I wanted to clean it up and swap things to follow the standards we had implemented, which required naming based on the line of business, location, and use.&lt;/p&gt;&#xA;&lt;p&gt;First I modified all the templates to remove the PRO-Device-CSS usage and replace it with the appropriate css.&lt;br&gt;&#xA;Next I check dependencies, assuming there couldn’t be that many things…&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://drizuid.github.io/posts/using-sql-to-clean-up-call-manager-pt1/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CUCM Licensed Users (9.x&#43;) using SQL</title>
      <link>https://drizuid.github.io/2017/02/cucm-licensed-users-9-x-using-sql/</link>
      <pubDate>Wed, 22 Feb 2017 21:19:00 +0000</pubDate>
      <guid>https://drizuid.github.io/2017/02/cucm-licensed-users-9-x-using-sql/</guid>
      <description>&lt;p&gt;A client was facing some licensing issues with shared devices. After a discussion, we decided to create a local user account for this particular location. Using this local user account, we would assign all generic shared devices (waiting room, lobby, hallway) to this user and save a bunch of enhanced licenses by properly utilizing CUWLs.&lt;/p&gt;&#xA;&lt;p&gt;I provided some guidance and a local admin began the process of clicking a phone, setting the user, saving and picking the next. Obviously this is pretty painful and slow. I decided to see what we could do to speed the process up.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
